{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseResourceName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "リソース生成に使用するベース リソース名"
      }
    },
    "botClientId": {
      "type": "string",
      "minLength": 36,
      "maxLength": 36,
      "metadata": {
        "description": "Azure AD ボット アプリのクライアント ID（例 : 123e4567-e89b-12d3-a456-426655440000）"
      }
    },
    "botClientSecret": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "Azure AD ボット アプリのクライアント シークレット"
      }
    },
    "appDisplayName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Expert Finder",
      "metadata": {
        "description": "アプリの表示名"
      }
    },
    "appDescription": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "エキスパート ファインダーを使用すると、いくつかの属性に基づいてユーザーを検索することができます。",
      "metadata": {
        "description": "アプリの説明"
      }
    },
    "appIconUrl": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "https://raw.githubusercontent.com/OfficeDev/microsoft-teams-apps-expertfinder/master/Manifest/color.png",
      "metadata": {
        "description": "アプリのアイコンの URL ( PNG 形式)"
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "minLength": 1,
      "maxLength": 36,
      "metadata": {
        "description": "アプリがデプロイされるテナントのID"
      }
    },
    "sharePointSiteUrl": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "SharePoint のサイトの URL"
      }
    },
    "tokenSigningKey": {
      "type": "string",
      "minLength": 13,
      "defaultValue": "[concat(uniqueString(newGuid()), uniqueString(newGuid()))]",
      "metadata": {
        "description": "タスク モジュールで認証用の JWT を生成するための暗号化キー"
      }
    },
    "sku": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Standard",
      "metadata": {
        "description": "ホスティング プランの価格レベル"
      }
    },
    "planSize": {
      "type": "string",
      "allowedValues": [
        "1",
        "2",
        "3"
      ],
      "defaultValue": "1",
      "metadata": {
        "description": "ホスティング プランのサイズ  (small, medium, or large)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "リソースの場所"
      }
    },
    "gitRepoUrl": {
      "type": "string",
      "metadata": {
        "description": "デプロイする GitHub リポジトリへの URL"
      },
      "defaultValue": "https://github.com/OfficeDev/microsoft-teams-apps-expertfinder.git"
    },
    "gitBranch": {
      "type": "string",
      "metadata": {
        "description": "デプロイする GitHub リポジトリのブランチ"
      },
      "defaultValue": "translate-ja"
    },

    "defaultCulture": {
      "type": "string",
      "allowedValues": [
        "en",
        "ar",
        "de",
        "es",
        "fr",
        "he",
        "ja",
        "ko",
        "pt-BR",
        "ru",
        "zh-CN",
        "zh-TW"
      ],
      "defaultValue": "ja",
      "metadata": {
        "description": "アプリの既定のローカライズ"
      }
    }
  },
  "variables": {
    "uniqueString": "[uniquestring(subscription().subscriptionId, resourceGroup().id, parameters('baseResourceName'))]",
    "botName": "[parameters('baseResourceName')]",
    "botAppName": "[parameters('baseResourceName')]",
    "botAppDomain": "[concat(variables('botAppName'), '.azurewebsites.net')]",
    "botAppUrl": "[concat('https://', variables('botAppDomain'))]",
    "hostingPlanName": "[parameters('baseResourceName')]",
    "storageAccountName": "[variables('uniqueString')]",
    "botAppInsightsName": "[parameters('baseResourceName')]",
    "sharedSkus": [
      "Free",
      "Shared"
    ],
    "isSharedPlan": "[contains(variables('sharedSkus'), parameters('sku'))]",
    "skuFamily": "[if(equals(parameters('sku'), 'Shared'), 'D', take(parameters('sku'), 1))]"
  },
  "resources": [
    {
      "apiVersion": "2018-02-01",
      "kind": "Storage",
      "location": "[parameters('location')]",
      "name": "[variables('storageAccountName')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "2016-09-01",
      "location": "[parameters('location')]",
      "name": "[variables('hostingPlanName')]",
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "hostingEnvironment": "",
        "numberOfWorkers": 1
      },
      "sku": {
        "name": "[if(variables('isSharedPlan'), concat(variables('skuFamily'),'1'), concat(variables('skuFamily'),parameters('planSize')))]",
        "tier": "[parameters('sku')]",
        "size": "[concat(variables('skuFamily'), parameters('planSize'))]",
        "family": "[variables('skuFamily')]",
        "capacity": 0
      },
      "type": "Microsoft.Web/serverfarms"
    },
    {
      "apiVersion": "2016-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/components/', variables('botAppInsightsName'))]"
      ],
      "kind": "app",
      "location": "[parameters('location')]",
      "name": "[variables('botAppName')]",
      "properties": {
        "name": "[variables('botAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "enabled": true,
        "reserved": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "appSettings": [
            {
              "name": "SITE_ROLE",
              "value": "bot"
            },
            {
              "name": "MicrosoftAppId",
              "value": "[parameters('botClientId')]"
            },
            {
              "name": "MicrosoftAppPassword",
              "value": "[parameters('botClientSecret')]"
            },
            {
              "name": "OAuthConnectionName",
              "value": "ExpertFinderAuth"
            },
            {
              "name": "StorageConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AppBaseUri",
              "value": "[concat('https://', variables('botAppDomain'))]"
            },
            {
              "name": "TenantId",
              "value": "[parameters('tenantId')]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components/', variables('botAppInsightsName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "SharePointSiteUrl",
              "value": "[parameters('sharePointSiteUrl')]"
            },
            {
              "name": "TokenSigningKey",
              "value": "[parameters('tokenSigningKey')]"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "10.15.2"
            },
            {
              "name": "i18n:DefaultCulture",
              "value": "[parameters('defaultCulture')]"
            },
            {
              "name": "i18n:SupportedCultures",
              "value": "en,ar,de,es,fr,he,ja,ko,pt-BR,ru,zh-CN,zh-TW"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2016-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "condition": "[not(empty(parameters('gitRepoUrl')))]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('botAppName'))]"
          ],
          "properties": {
            "RepoUrl": "[parameters('gitRepoUrl')]",
            "branch": "[parameters('gitBranch')]",
            "IsManualIntegration": true
          }
        }
      ],
      "type": "Microsoft.Web/sites"
    },
    {
      "apiVersion": "2015-05-01",
      "name": "[variables('botAppInsightsName')]",
      "type": "Microsoft.Insights/components",
      "location": "[parameters('location')]",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('botAppName'))]": "Resource"
      },
      "properties": {
        "Application_Type": "web",
        "Request_Source": "rest"
      }
    },
    {
      "apiVersion": "2018-07-12",
      "kind": "sdk",
      "location": "global",
      "name": "[variables('botName')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('botAppName'))]"
      ],
      "properties": {
        "displayName": "[parameters('appDisplayName')]",
        "description": "[parameters('appDescription')]",
        "iconUrl": "[parameters('appIconUrl')]",
        "msaAppId": "[parameters('botClientId')]",
        "endpoint": "[concat(variables('botAppUrl'), '/api/messages')]",
        "developerAppInsightKey": "[reference(resourceId('Microsoft.Insights/components', variables('botAppInsightsName')), '2015-05-01').InstrumentationKey]"
      },
      "resources": [
        {
          "name": "[concat(variables('botName'), '/MsTeamsChannel')]",
          "type": "Microsoft.BotService/botServices/channels",
          "apiVersion": "2018-07-12",
          "location": "global",
          "sku": {
            "name": "F0"
          },
          "properties": {
            "channelName": "MsTeamsChannel",
            "location": "global",
            "properties": {
              "isEnabled": true
            }
          },
          "dependsOn": [
            "[concat('Microsoft.BotService/botServices/', variables('botName'))]"
          ]
        }
      ],
      "sku": {
        "name": "F0"
      },
      "type": "Microsoft.BotService/botServices"
    }
  ],
  "outputs": {
    "botId": {
      "type": "string",
      "value": "[parameters('botClientId')]"
    },
    "appDomain": {
      "type": "string",
      "value": "[variables('botAppDomain')]"
    }
  }
}